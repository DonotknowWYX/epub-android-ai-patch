name: Android CI/CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17]  # 必须使用 JDK 17
        gradle: [8.0.2]  # 配套 JDK 17

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 完整历史记录

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: "12.0"  # 最新稳定版
          packages: |
            cmdline-tools
            build-tools;34.0.0
            platforms;android-34
            emulator  # 可选：需要模拟器时启用

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Configure Environment
        run: |
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          echo "org.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8" >> gradle.properties
          echo "android.useAndroidX=true" >> gradle.properties
          echo "android.enableJetifier=true" >> gradle.properties

      - name: Clean Build Environment
        run: |
          rm -rf ~/.gradle/caches/
          rm -rf app/build/
          chmod +x gradlew

      - name: Build Release APK
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false"
        run: ./gradlew assembleRelease --stacktrace --info

      - name: Sign APK
        if: github.ref == 'refs/heads/main'
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Release-APK
          path: |
            app/build/outputs/apk/release/*.apk
            build/reports/tests/test/*.html
            build/reports/gradle-logs/

  publish-to-github:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: Release-APK

      - name: Publish to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "v$(date +%s)"
          name: "Release Build $(date +%Y-%m-%d)"
          body: "Automated build from main branch"
          draft: false
          prerelease: false
          artifacts: "*.apk"
